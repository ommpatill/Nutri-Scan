{"ast":null,"code":"var _jsxFileName = \"D:\\\\TYProj\\\\NutriScan\\\\client\\\\src\\\\pages\\\\Upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Clipboard, Upload } from 'lucide-react'; // ✅ For icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  handleSubmit,\n  setImage,\n  loading\n}) => {\n  _s();\n  const [preview, setPreview] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const fileInputRef = useRef(null);\n\n  // ✅ Handle Drag and Drop\n  const handleDrop = e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    if (file) handleFile(file);\n  };\n\n  // ✅ Handle File Selection\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) handleFile(file);\n  };\n\n  // ✅ Handle File Paste\n  const handlePaste = e => {\n    const items = (e.clipboardData || e.originalEvent.clipboardData).items;\n    for (const item of items) {\n      if (item.kind === 'file') {\n        const file = item.getAsFile();\n        if (file) handleFile(file);\n      }\n    }\n  };\n\n  // ✅ Handle File from Clipboard using Clipboard API\n  const handlePasteFromClipboard = async () => {\n    try {\n      const clipboardItems = await navigator.clipboard.read();\n      for (const item of clipboardItems) {\n        for (const type of item.types) {\n          if (type.startsWith('image/')) {\n            const blob = await item.getType(type);\n            const file = new File([blob], 'pasted-image.png', {\n              type\n            });\n            handleFile(file);\n            return;\n          }\n        }\n      }\n      alert('No image found in clipboard!');\n    } catch (error) {\n      console.error('Error reading from clipboard:', error);\n      alert('Clipboard access not supported or permission denied!');\n    }\n  };\n\n  // ✅ Handle File\n  const handleFile = file => {\n    if (file) {\n      setImage(file);\n      setPreview(URL.createObjectURL(file));\n      setFileName(file.name);\n    }\n  };\n\n  // ✅ Trigger File Input on Click\n  const handleClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center relative\",\n    onDragOver: e => e.preventDefault(),\n    onDrop: handleDrop,\n    onPaste: handlePaste // ✅ Handle paste event\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-dashed border-gray-400 rounded-md p-6 w-80 text-center cursor-pointer relative\",\n      onClick: handleClick,\n      children: [preview ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Preview\",\n          className: \"w-40 h-40 object-cover mx-auto rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mt-2\",\n          children: \"Click to change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: [\"Drag & drop, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"paste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 26\n        }, this), \", or click to select an image\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        className: \"hidden\",\n        ref: fileInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasteFromClipboard,\n        className: \"absolute bottom-2 left-2 bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition\",\n        title: \"Paste from clipboard\",\n        children: /*#__PURE__*/_jsxDEV(Clipboard, {\n          className: \"w-5 h-5 text-gray-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mt-2\",\n      children: [\"Uploaded: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: `mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-80 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`,\n      disabled: loading,\n      children: loading ? 'Processing...' : 'Upload & Predict'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"CGUHumfrYx/jouBCH7rVjK50Byg=\");\n_c = FileUpload;\nexport default FileUpload;\n\n// import React, { useRef, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"../services/axios\";\n\n// const Upload = () => {\n//   const [image, setImage] = useState(null); // Store the image file\n//   const [processing, setProcessing] = useState(false);\n//   const fileInputRef = useRef();\n//   const navigate = useNavigate();\n\n//   const handleImage = (file) => {\n//     setImage(file); // Store the file itself, not the base64 string\n//   };\n\n//   const handleDrop = (e) => {\n//     e.preventDefault();\n//     const file = e.dataTransfer.files[0];\n//     if (file) handleImage(file);\n//   };\n\n//   const handlePaste = (e) => {\n//     const item = e.clipboardData.items[0];\n//     if (item && item.type.includes(\"image\")) {\n//       const file = item.getAsFile();\n//       handleImage(file);\n//     }\n//   };\n\n//   const handleUpload = async () => {\n//     setProcessing(true);\n//     try {\n//       // Create FormData to send the image as a file\n//       const formData = new FormData();\n//       formData.append(\"image\", image); // Append the actual file to FormData with the correct key\n\n//       // Send the image to the backend's prediction route\n//       const res = await axios.post(\"/api/predict\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n\n//       // Simulate buffer time for the result to be processed\n//       setTimeout(() => {\n//         navigate(\"/result\", { state: res.data });\n//       }, 3000); // simulate buffer time\n\n//     } catch (err) {\n//       console.error(\"Upload failed:\", err);\n//       setProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div\n//       className=\"min-h-screen bg-gray-50 flex flex-col justify-center items-center px-4\"\n//       onDrop={handleDrop}\n//       onDragOver={(e) => e.preventDefault()}\n//       onPaste={handlePaste}\n//     >\n//       <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">\n//         Upload Your Image\n//       </h1>\n\n//       {!image && (\n//         <div\n//           onClick={() => fileInputRef.current.click()}\n//           className=\"w-full max-w-md h-60 border-2 border-dashed border-blue-300 rounded-xl flex items-center justify-center text-blue-500 cursor-pointer bg-white hover:shadow-md transition\"\n//         >\n//           Drag & Drop, Paste, or Click to Upload Image\n//         </div>\n//       )}\n\n//       {image && (\n//         <div className=\"w-full max-w-md mt-4 flex flex-col items-center\">\n//           <img\n//             src={URL.createObjectURL(image)} // Show the image preview from the file object\n//             alt=\"Preview\"\n//             className=\"w-full rounded-md shadow-md\"\n//           />\n//           <button\n//             onClick={() => setImage(null)}\n//             className=\"mt-2 text-sm text-red-500 underline\"\n//           >\n//             Remove Image\n//           </button>\n//         </div>\n//       )}\n\n//       <input\n//         type=\"file\"\n//         accept=\"image/*\"\n//         hidden\n//         ref={fileInputRef}\n//         onChange={(e) => handleImage(e.target.files[0])}\n//       />\n\n//       {image && !processing && (\n//         <button\n//           onClick={handleUpload}\n//           className=\"mt-6 bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition\"\n//         >\n//           Analyze Image\n//         </button>\n//       )}\n\n//       {processing && (\n//         <p className=\"mt-6 text-blue-600 font-semibold animate-pulse\">\n//           Processing your image...\n//         </p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Upload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","Clipboard","Upload","jsxDEV","_jsxDEV","FileUpload","handleSubmit","setImage","loading","_s","preview","setPreview","fileName","setFileName","fileInputRef","handleDrop","e","preventDefault","file","dataTransfer","files","handleFile","handleFileChange","target","handlePaste","items","clipboardData","originalEvent","item","kind","getAsFile","handlePasteFromClipboard","clipboardItems","navigator","clipboard","read","type","types","startsWith","blob","getType","File","alert","error","console","URL","createObjectURL","name","handleClick","current","click","className","onDragOver","onDrop","onPaste","children","onClick","src","alt","_jsxFileName","lineNumber","columnNumber","id","accept","onChange","ref","title","disabled","_c","$RefreshReg$"],"sources":["D:/TYProj/NutriScan/client/src/pages/Upload.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Clipboard, Upload } from 'lucide-react'; // ✅ For icons\r\n\r\nconst FileUpload = ({ handleSubmit, setImage, loading }) => {\r\n  const [preview, setPreview] = useState(null);\r\n  const [fileName, setFileName] = useState('');\r\n  const fileInputRef = useRef(null);\r\n\r\n  // ✅ Handle Drag and Drop\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    if (file) handleFile(file);\r\n  };\r\n\r\n  // ✅ Handle File Selection\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) handleFile(file);\r\n  };\r\n\r\n  // ✅ Handle File Paste\r\n  const handlePaste = (e) => {\r\n    const items = (e.clipboardData || e.originalEvent.clipboardData).items;\r\n    for (const item of items) {\r\n      if (item.kind === 'file') {\r\n        const file = item.getAsFile();\r\n        if (file) handleFile(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  // ✅ Handle File from Clipboard using Clipboard API\r\n  const handlePasteFromClipboard = async () => {\r\n    try {\r\n      const clipboardItems = await navigator.clipboard.read();\r\n      for (const item of clipboardItems) {\r\n        for (const type of item.types) {\r\n          if (type.startsWith('image/')) {\r\n            const blob = await item.getType(type);\r\n            const file = new File([blob], 'pasted-image.png', { type });\r\n            handleFile(file);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      alert('No image found in clipboard!');\r\n    } catch (error) {\r\n      console.error('Error reading from clipboard:', error);\r\n      alert('Clipboard access not supported or permission denied!');\r\n    }\r\n  };\r\n\r\n  // ✅ Handle File\r\n  const handleFile = (file) => {\r\n    if (file) {\r\n      setImage(file);\r\n      setPreview(URL.createObjectURL(file));\r\n      setFileName(file.name);\r\n    }\r\n  };\r\n\r\n  // ✅ Trigger File Input on Click\r\n  const handleClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"flex flex-col items-center relative\" \r\n      onDragOver={(e) => e.preventDefault()} \r\n      onDrop={handleDrop}\r\n      onPaste={handlePaste} // ✅ Handle paste event\r\n    >\r\n      {/* ✅ Drag and Drop Box */}\r\n      <div\r\n        className=\"border-2 border-dashed border-gray-400 rounded-md p-6 w-80 text-center cursor-pointer relative\"\r\n        onClick={handleClick}\r\n      >\r\n        {preview ? (\r\n          <div className=\"relative\">\r\n            {/* ✅ Image Preview */}\r\n            <img\r\n              src={preview}\r\n              alt=\"Preview\"\r\n              className=\"w-40 h-40 object-cover mx-auto rounded\"\r\n            />\r\n            {/* ✅ Click to change */}\r\n            <p className=\"text-gray-500 mt-2\">Click to change</p>\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-gray-500\">\r\n            Drag & drop, <span className=\"font-semibold\">paste</span>, or click to select an image\r\n          </p>\r\n        )}\r\n\r\n        {/* ✅ Hidden File Input */}\r\n        <input\r\n          id=\"fileInput\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileChange}\r\n          className=\"hidden\"\r\n          ref={fileInputRef}\r\n        />\r\n\r\n        {/* ✅ Paste Icon Inside Drag and Drop */}\r\n        <button\r\n          onClick={handlePasteFromClipboard}\r\n          className=\"absolute bottom-2 left-2 bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition\"\r\n          title=\"Paste from clipboard\"\r\n        >\r\n          <Clipboard className=\"w-5 h-5 text-gray-600\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* ✅ File Name */}\r\n      {fileName && (\r\n        <p className=\"text-gray-600 mt-2\">\r\n          Uploaded: <strong>{fileName}</strong>\r\n        </p>\r\n      )}\r\n\r\n      {/* ✅ Submit Button */}\r\n      <button\r\n        onClick={handleSubmit}\r\n        className={`mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-80 ${\r\n          loading ? 'opacity-50 cursor-not-allowed' : ''\r\n        }`}\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Processing...' : 'Upload & Predict'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n\r\n\r\n// import React, { useRef, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"../services/axios\";\r\n\r\n// const Upload = () => {\r\n//   const [image, setImage] = useState(null); // Store the image file\r\n//   const [processing, setProcessing] = useState(false);\r\n//   const fileInputRef = useRef();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleImage = (file) => {\r\n//     setImage(file); // Store the file itself, not the base64 string\r\n//   };\r\n\r\n//   const handleDrop = (e) => {\r\n//     e.preventDefault();\r\n//     const file = e.dataTransfer.files[0];\r\n//     if (file) handleImage(file);\r\n//   };\r\n\r\n//   const handlePaste = (e) => {\r\n//     const item = e.clipboardData.items[0];\r\n//     if (item && item.type.includes(\"image\")) {\r\n//       const file = item.getAsFile();\r\n//       handleImage(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     setProcessing(true);\r\n//     try {\r\n//       // Create FormData to send the image as a file\r\n//       const formData = new FormData();\r\n//       formData.append(\"image\", image); // Append the actual file to FormData with the correct key\r\n\r\n//       // Send the image to the backend's prediction route\r\n//       const res = await axios.post(\"/api/predict\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n\r\n//       // Simulate buffer time for the result to be processed\r\n//       setTimeout(() => {\r\n//         navigate(\"/result\", { state: res.data });\r\n//       }, 3000); // simulate buffer time\r\n\r\n//     } catch (err) {\r\n//       console.error(\"Upload failed:\", err);\r\n//       setProcessing(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"min-h-screen bg-gray-50 flex flex-col justify-center items-center px-4\"\r\n//       onDrop={handleDrop}\r\n//       onDragOver={(e) => e.preventDefault()}\r\n//       onPaste={handlePaste}\r\n//     >\r\n//       <h1 className=\"text-3xl font-bold text-blue-600 mb-4\">\r\n//         Upload Your Image\r\n//       </h1>\r\n\r\n//       {!image && (\r\n//         <div\r\n//           onClick={() => fileInputRef.current.click()}\r\n//           className=\"w-full max-w-md h-60 border-2 border-dashed border-blue-300 rounded-xl flex items-center justify-center text-blue-500 cursor-pointer bg-white hover:shadow-md transition\"\r\n//         >\r\n//           Drag & Drop, Paste, or Click to Upload Image\r\n//         </div>\r\n//       )}\r\n\r\n//       {image && (\r\n//         <div className=\"w-full max-w-md mt-4 flex flex-col items-center\">\r\n//           <img\r\n//             src={URL.createObjectURL(image)} // Show the image preview from the file object\r\n//             alt=\"Preview\"\r\n//             className=\"w-full rounded-md shadow-md\"\r\n//           />\r\n//           <button\r\n//             onClick={() => setImage(null)}\r\n//             className=\"mt-2 text-sm text-red-500 underline\"\r\n//           >\r\n//             Remove Image\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       <input\r\n//         type=\"file\"\r\n//         accept=\"image/*\"\r\n//         hidden\r\n//         ref={fileInputRef}\r\n//         onChange={(e) => handleImage(e.target.files[0])}\r\n//       />\r\n\r\n//       {image && !processing && (\r\n//         <button\r\n//           onClick={handleUpload}\r\n//           className=\"mt-6 bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition\"\r\n//         >\r\n//           Analyze Image\r\n//         </button>\r\n//       )}\r\n\r\n//       {processing && (\r\n//         <p className=\"mt-6 text-blue-600 font-semibold animate-pulse\">\r\n//           Processing your image...\r\n//         </p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Upload;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}